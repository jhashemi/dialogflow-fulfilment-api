#!/usr/bin/env ruby

require 'pathname'
require 'fileutils'

include FileUtils

APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  puts "\n== Copying sample files =="
  unless File.exist?('config/application.yml')
    system 'cp config/application.example.yml config/application.yml'
  end

  puts "\n== Preparing database =="
  system! 'bin/rails db:setup'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end

if heroku join --app owl-insurance-fulfilment-api-staging > /dev/null 2>&1; then
  git remote add staging git@heroku.com:owl-insurance-fulfilment-api-staging.git || true
  printf 'You are a collaborator on the "owl-insurance-fulfilment-api-staging" Heroku app
'
else
  printf 'Ask for access to the "owl-insurance-fulfilment-api-staging" Heroku app
'
fi


if heroku join --app owl-insurance-fulfilment-api-production > /dev/null 2>&1; then
  git remote add production git@heroku.com:owl-insurance-fulfilment-api-production.git || true
  printf 'You are a collaborator on the "owl-insurance-fulfilment-api-production" Heroku app
'
else
  printf 'Ask for access to the "owl-insurance-fulfilment-api-production" Heroku app
'
fi


git config heroku.remote staging
